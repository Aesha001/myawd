Create & Open Folder
initialize node
install express mongoose 
create Server and add listner to the server.

____________________________________Express Code____________________________________
____________________________Code (Getting Data)____________________________
const express = require("express")	//Imported Express that returns function
const app = express()			//Stored that function into Variable
const mongoose  = require("mongoose")	//Imported Mongoose (driver of MongoDB) 

app.use(express.static(__dirname))	//sharing whole directory to the Server
app.use(express.json())			// adding indication that app will use JSON Data 

//Connecting mongo DB 
mongoose.connect("mongodb://127.0.0.1:27017/amirDB")
const conn = mongoose.connection
conn.on("connected",function(){
    console.log("You are Connected")
})

//Creating Schema
const productSchema = new mongoose.Schema({
    "proID": String,
    "proName": String,
    "price":Number,
    "qty":Number
})

//Creating Model
----------------------------------------------------------------------------------------------------------------------------
const productModel = new mongoose.model("productModel", productSchema, "Product")

// defining route for ("/") path (blank path) and returning homepage file 
----------------------------------------------------------------------------------------------------------------------------
app.get("/", (req, res)=>{
    res.sendFile(__dirname + '/homepage.html');
})

// defining route for ("/api/get") path (API) for get The Data.
----------------------------------------------------------------------------------------------------------------------------
app.get("/api/get", async function(req, res){
    await productModel.find({}).then((result)=>{
        res.json(result)
    })
})

// defining route for ("/api/post") path (API) for ADD The Data.
----------------------------------------------------------------------------------------------------------------------------
app.post("/api/post", async function (req, res){
    await productModel.create({
        "proID": req.body.proID,
        "proName": req.body.proName,
        "price": req.body.price,
        "qty": req.body.qty
    }).then((result)=>{
        res.json(result)
    })
})

// defining route for ("/api/delete") path (API) for Delete The Data.
----------------------------------------------------------------------------------------------------------------------------
app.delete("/api/delete/:id", async function(req, res){
    await productModel.deleteOne({
        "proID": req.params.id
    }).then((result)=>{
        res.json(result)
    })
})

// defining route for ("/api/put") path (API) for Update The Data.
----------------------------------------------------------------------------------------------------------------------------
app.put("/api/put", async function(req, res){
    await productModel.updateOne({"proID":req.body.proID}, 
    {$set: {
        "proName": req.body.proName,
        "price": req.body.price,
        "qty": req.body.qty
    }}
    ).then((result)=>{
        res.json(result)
    })
})

app.listen(11100,function(){
    console.log("Server Running on Port Number: 11100");
})





____________________________________HTML Code____________________________________
<!DOCTYPE html>
<html>
<head>
    <title>Page Title</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.3/angular.min.js" integrity="sha512-KZmyTq3PLx9EZl0RHShHQuXtrvdJ+m35tuOiwlcZfs/rE7NZv29ygNA8SFCkMXTnYZQK2OX0Gm2qKGfvWEtRXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src='module.js'></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body ng-app="myApp" ng-controller="myCTRL">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <h1>Your Data</h1>
                <table class="table table-responsive table-bordered w-50">
                    <tr>
                        <th>Product ID</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Action</th>
                    </tr>
                    <tr ng-repeat="item in list">
                        <td>{{item.proID}}</td>
                        <td>{{item.proName}}</td>
                        <td>{{item.price}}</td>
                        <td>{{item.qty}}</td>
                        <td>
                            <input type="button" class="btn btn-danger" ng-click="delete(item)" value="Delete"> 
                        </td>
                    </tr>
                </table>
            </div>
           <div class="col-6 my-5">
                <h1>Insert New Data</h1>
                <form ng-submit="addData()">
                    <label>Enter Product ID</label>
                    <input type="text" class="form-control" ng-model="newData.proID">
                    <label>Enter Product Name</label>
                    <input type="text" class="form-control" ng-model="newData.proName">
                    <label>Enter Price</label>
                    <input type="number" class="form-control" ng-model="newData.price">
                    <label>Enter Quantity</label>
                    <input type="number" class="form-control" ng-model="newData.qty">

                    <input type="submit" class="btn btn-success" value="Insert Data">
                </form>
            </div>
            <div class="col-6 my-5 bg-dark text-light" ng-if="temp==1">
                <h1>Update Data</h1>
                <form ng-submit="updateData()">
                    <label>Enter Product ID</label>
                    <input type="text" class="form-control" disabled="" ng-model="upda.proID">
                    <label>Enter Product Name</label>
                    <input type="text" class="form-control" ng-model="upda.proName">
                    <label>Enter Price</label>
                    <input type="number" class="form-control" ng-model="upda.price">
                    <label>Enter Quantity</label>
                    <input type="number" class="form-control" ng-model="upda.qty">

                    <input type="submit" class="btn btn-success my-3" value="Update Data">
                </form>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
</body>
</html>




____________________________________Controller File Code____________________________________
var app = angular.module("myApp",[])
app.controller("myCTRL", function($scope, $http){
    $scope.list=[]

//Function to get The Data and Calling Get API.
    $scope.getData = () =>{
        $http.get("/api/get").then((res)=>{
            $scope.list = res.data;
        })
    }
    $scope.getData();


//Function to Add The Data and Calling POST API.
$scope.addData = () =>{
        $http.post("/api/post",$scope.newData).then((res)=>{
            $scope.list = res.data;
            $scope.getData();
            $scope.newData = {}
        })
    }

//Function to Delete The Data and Calling DELETE API.
$scope.delete = (item) =>{
        $http.delete(`/api/delete/${item.proID}`).then((res)=>{
            $scope.list = res.data;
            $scope.getData();
        })
    }
})

$scope.update = (item) =>{
        $scope.temp = 1;
        $scope.upda = {
            "proID": item.proID,
            "proName": item.proName,
            "price": item.price,
            "qty": item.qty
        }
    }

    $scope.updateData = () =>{
        $http.put("/api/put", $scope.upda).then((res)=>{
            $scope.list = res.data;
            $scope.getData();
            $scope.temp = 0;
        })
    }



